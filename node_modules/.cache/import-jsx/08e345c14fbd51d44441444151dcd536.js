const React = require('react');
const {
  render
} = require('ink');
const importJSX = require('@isaacs/import-jsx');
/* istanbul ignore next */
const reporter = {
  report(tap, Type = 'base') {
    // NB: React will only render as a tag if it's capitalized
    if (typeof Type === 'function' && Type.prototype.isReactComponent) return render( /*#__PURE__*/React.createElement(Type, {
      tap: tap
    }));
    if (typeof Type !== 'string' || !types.includes(Type)) throw new Error('unsupported report type: ' + Type);
    const Report = importJSX('./reports/' + Type);
    render( /*#__PURE__*/React.createElement(Report, {
      tap: tap
    }));
  }
};

/* istanbul ignore next */
module.exports = (...args) => reporter.report(...args);
const types = module.exports.types = require('../types.js');
const cap = s => s.replace(/^./, $0 => $0.toUpperCase());
types.forEach(type => Object.defineProperty(module.exports, cap(type), {
  get: () => importJSX(`./reports/${type}`),
  enumerable: true
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJyZW5kZXIiLCJpbXBvcnRKU1giLCJyZXBvcnRlciIsInJlcG9ydCIsInRhcCIsIlR5cGUiLCJwcm90b3R5cGUiLCJpc1JlYWN0Q29tcG9uZW50IiwidHlwZXMiLCJpbmNsdWRlcyIsIkVycm9yIiwiUmVwb3J0IiwibW9kdWxlIiwiZXhwb3J0cyIsImFyZ3MiLCJjYXAiLCJzIiwicmVwbGFjZSIsIiQwIiwidG9VcHBlckNhc2UiLCJmb3JFYWNoIiwidHlwZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0IiwiZW51bWVyYWJsZSJdLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKVxuY29uc3Qge3JlbmRlcn0gPSByZXF1aXJlKCdpbmsnKVxuY29uc3QgaW1wb3J0SlNYID0gcmVxdWlyZSgnQGlzYWFjcy9pbXBvcnQtanN4Jylcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5jb25zdCByZXBvcnRlciA9IHtcbiAgcmVwb3J0ICh0YXAsIFR5cGUgPSAnYmFzZScpIHtcbiAgICAvLyBOQjogUmVhY3Qgd2lsbCBvbmx5IHJlbmRlciBhcyBhIHRhZyBpZiBpdCdzIGNhcGl0YWxpemVkXG4gICAgaWYgKHR5cGVvZiBUeXBlID09PSAnZnVuY3Rpb24nICYmIFR5cGUucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQpXG4gICAgICByZXR1cm4gcmVuZGVyKDxUeXBlIHRhcD17dGFwfSAvPilcblxuICAgIGlmICh0eXBlb2YgVHlwZSAhPT0gJ3N0cmluZycgfHwgIXR5cGVzLmluY2x1ZGVzKFR5cGUpKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKCd1bnN1cHBvcnRlZCByZXBvcnQgdHlwZTogJyArIFR5cGUpXG5cbiAgICBjb25zdCBSZXBvcnQgPSBpbXBvcnRKU1goJy4vcmVwb3J0cy8nICsgVHlwZSlcbiAgICByZW5kZXIoPFJlcG9ydCB0YXA9e3RhcH0gLz4pXG4gIH1cbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbm1vZHVsZS5leHBvcnRzID0gKC4uLmFyZ3MpID0+IHJlcG9ydGVyLnJlcG9ydCguLi5hcmdzKVxuXG5jb25zdCB0eXBlcyA9IG1vZHVsZS5leHBvcnRzLnR5cGVzID0gcmVxdWlyZSgnLi4vdHlwZXMuanMnKVxuY29uc3QgY2FwID0gcyA9PiBzLnJlcGxhY2UoL14uLywgJDAgPT4gJDAudG9VcHBlckNhc2UoKSlcbnR5cGVzLmZvckVhY2godHlwZSA9PlxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLmV4cG9ydHMsIGNhcCh0eXBlKSwge1xuICAgIGdldDogKCkgPT4gaW1wb3J0SlNYKGAuL3JlcG9ydHMvJHt0eXBlfWApLFxuICAgIGVudW1lcmFibGU6IHRydWUsXG4gIH0pKVxuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFDOUIsTUFBTTtFQUFDQztBQUFNLENBQUMsR0FBR0QsT0FBTyxDQUFDLEtBQUssQ0FBQztBQUMvQixNQUFNRSxTQUFTLEdBQUdGLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQztBQUMvQztBQUNBLE1BQU1HLFFBQVEsR0FBRztFQUNmQyxNQUFNLENBQUVDLEdBQUcsRUFBRUMsSUFBSSxHQUFHLE1BQU0sRUFBRTtJQUMxQjtJQUNBLElBQUksT0FBT0EsSUFBSSxLQUFLLFVBQVUsSUFBSUEsSUFBSSxDQUFDQyxTQUFTLENBQUNDLGdCQUFnQixFQUMvRCxPQUFPUCxNQUFNLGVBQUMsb0JBQUMsSUFBSTtNQUFDLEdBQUcsRUFBRUk7SUFBSSxFQUFHLENBQUM7SUFFbkMsSUFBSSxPQUFPQyxJQUFJLEtBQUssUUFBUSxJQUFJLENBQUNHLEtBQUssQ0FBQ0MsUUFBUSxDQUFDSixJQUFJLENBQUMsRUFDbkQsTUFBTSxJQUFJSyxLQUFLLENBQUMsMkJBQTJCLEdBQUdMLElBQUksQ0FBQztJQUVyRCxNQUFNTSxNQUFNLEdBQUdWLFNBQVMsQ0FBQyxZQUFZLEdBQUdJLElBQUksQ0FBQztJQUM3Q0wsTUFBTSxlQUFDLG9CQUFDLE1BQU07TUFBQyxHQUFHLEVBQUVJO0lBQUksRUFBRyxDQUFDO0VBQzlCO0FBQ0YsQ0FBQzs7QUFFRDtBQUNBUSxNQUFNLENBQUNDLE9BQU8sR0FBRyxDQUFDLEdBQUdDLElBQUksS0FBS1osUUFBUSxDQUFDQyxNQUFNLENBQUMsR0FBR1csSUFBSSxDQUFDO0FBRXRELE1BQU1OLEtBQUssR0FBR0ksTUFBTSxDQUFDQyxPQUFPLENBQUNMLEtBQUssR0FBR1QsT0FBTyxDQUFDLGFBQWEsQ0FBQztBQUMzRCxNQUFNZ0IsR0FBRyxHQUFHQyxDQUFDLElBQUlBLENBQUMsQ0FBQ0MsT0FBTyxDQUFDLElBQUksRUFBRUMsRUFBRSxJQUFJQSxFQUFFLENBQUNDLFdBQVcsRUFBRSxDQUFDO0FBQ3hEWCxLQUFLLENBQUNZLE9BQU8sQ0FBQ0MsSUFBSSxJQUNoQkMsTUFBTSxDQUFDQyxjQUFjLENBQUNYLE1BQU0sQ0FBQ0MsT0FBTyxFQUFFRSxHQUFHLENBQUNNLElBQUksQ0FBQyxFQUFFO0VBQy9DRyxHQUFHLEVBQUUsTUFBTXZCLFNBQVMsQ0FBRSxhQUFZb0IsSUFBSyxFQUFDLENBQUM7RUFDekNJLFVBQVUsRUFBRTtBQUNkLENBQUMsQ0FBQyxDQUFDIn0=